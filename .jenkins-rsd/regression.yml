- job:
    name: regression-heme
    description: |
        Runs regression tests across all builds.
        The heme executable must be built *without* steering. Otherwise, there
        can be only one instance of heme per node.
    disabled: false
    block-upstream: true
    project-type: matrix
    concurrent: true
    execution-strategy:
        combination-filter: >
            (compiler == "intel").implies(os == "Legion")
            && (compiler == "clang").implies(os == "OSX")
            && (compiler == "gnu").implies(os == "Legion")
        sequential: false
    axes:
        - axis:
            type: slave
            name: os
            values:
                - OSX
                - Legion
        - axis:
            type: user-defined
            name: compiler
            values:
                - clang
                - intel
                - gnu
        - axis:
            type: user-defined
            name: sse3
            values:
                - "ON"
                - "OFF"

    scm:
        - hg:
            url: ssh://hg@entropy.chem.ucl.ac.uk/hemelb-input
            revision-type: branch
            revision: default
            wipe-workspace: false

    triggers:
        - pollscm: "@midnight * * * *"


    builders:
        - shell: |
            if [[ "$os" == "Legion" ]] ; then
                module load rsd-modules
                module load hemelb-dev/$compiler boost/1.56_cxx11 CGAL/4.6
                module load python/enthought/7.3-2_2015-03-02 cython virtualenv/1.11.6/enthought
                mpi="mpiexec -np 3"
            else
                mpi="mpiexec -np 2"
            fi
            [[ ! -e $WORKSPACE/regress ]] || rm -rf $WORKSPACE/regress
            [[ -e $WORKSPACE/regress ]] \
                || python -m virtualenv --system-site-packages $WORKSPACE/regress 
            . $WORKSPACE/regress/bin/activate

            port=1111
            if [[ $compiler == "gnu" ]] ; then
              port=$(( $port + 4 ))
            fi
            if [[ $sse3 == "ON" ]] ; then
              port=$(( $port + 1 ))
            fi


            alljobs=$(pwd | sed "s/\/workspace\/.*$//")/workspace
            hemelb=$(find $alljobs/development-heme -name hemelb -type f)
            hemelb=$(echo "$hemelb" | grep $compiler | grep $sse3 | grep build)

            tools=$(echo $hemelb | sed "s/\/build\/.*$//")/Tools
            cd $tools && python setup.py install

            cd $WORKSPACE/diffTest/
            [[ ! -e $WORKSPACE/results ]] || rm -rf $WORKSPACE/results
            $mpi $hemelb -in config.xml -out $WORKSPACE/results -i 0 -ss $port
            ./ImageComparison CleanImages $WORKSPACE/results/Images
            ./NumericalComparison CleanExtracted $WORKSPACE/results/Extracted
